#+TITLE: Virtual Infinity Systems
#+SUBTITLE: Computing Magic Curriculum
#+OPTIONS: toc:nil 
#+OPTIONS: num:nil

*  Computing Magic Curriculum

** Summary

Go beyond developing computer programs the hard way, i.e. manually. Learn the
most powerful [[https://en.wikipedia.org/wiki/Programming_paradigm][programming paradigms]] and how to use [[https://en.wikipedia.org/wiki/Metaprogramming][meta-programming]] to generate
correct-by-construction code from your specifications. Along the way, you will
build a dynamic Web Server with a customizable object-relational database. You
will wind up with l33t computing skills along with an extensible framework which
go well beyond the conventional state of the art - so you can accomplish your
ambitious goals.

** Strategy

1. Start from zero - Beginner's Mind
2. Take the least cluttered and most general path, leveraging
- https://racket-lang.org/
- https://www.postgresql.org/
3. Pull in /Computing Magic/ distinctions
- [[https://github.com/GregDavidson/new-rfcs/blob/main/vis-distinctions.org][vis-distinctions.org]]
- along with other great resources

** Object-Level Plan

1. Explore the three short Racket tutorials as a mathematician would, i.e.
making it your own as you go through the steps:
- https://docs.racket-lang.org/quick/
- https://docs.racket-lang.org/continue/index.html
- https://docs.racket-lang.org/more/index.html
2. Absorb the PostgreSQL tutorial:
- https://www.postgresql.org/docs/devel/tutorial.html
3. Read and improve the Wicci and make it your own:
https://gregdavidson.github.io/wicci-core-S0_lib/

** Additional Resources

- https://github.com/GregDavidson/lisp-systems
- https://github.com/GregDavidson/C-By-Example
- [[https://www.youtube.com/watch?v=6avJHaC3C2U][The Art of Code]]
- [[https://www.youtube.com/watch?v=a9xAKttWgP4][Life in APL]]
- https://xpqz.github.io/learnapl/intro.html
- https://pharo.org/
