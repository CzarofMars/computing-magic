* Computing Magic Beta Meeting 2
  
/Tooling Up/

Mars, Monday 24 January 2022

Notes from a [[https://github.com/GregDavidson/computing-magic][Computing Magic]] [[mars-beta-notes.org][Beta Course]] Meeting.

Today we did a partial review of what we've learned from last week's session and
the Quick tutorial. Then we began to discuss the key elements of the software
stack for supporting ambitious projects.

Learning more about appropriate pacing, [[2022-02-07-meeting-3.org][our next session]] will be a
/creativity lab/.

** Lisp Review and Enrichment

Moved to [[https://github.com/GregDavidson/on-lisp/lisp-simplicity.org][Lisp Simplicity]]

** After the Quick Tutorial

When you've finished the Quick Tutorial
- study [[file:../Racket/Tutorial-1-Pictures/after-quick.rkt][after-quick.rkt]]
- read the materials in the [[https://github.com/GregDavidson/on-lisp][On Lisp]] repository
- Read the notes from [[2022-01-24-meeting-1.org][our last session]]
  - you'll find a lot of new material there!

Lisp evolves while preserving its essence. 
- It's a language which can serve you forever!

** Would you like to do more Art with Racket?

Create more art with 2D Functional Pictures in Slideshow
- [[https://docs.racket-lang.org/pict][2D Functional Pictures]]
      - Lots more Shapes, Options and Combinators
      - Animation and Interactive Features
      - Exports to other media
- [[https://docs.racket-lang.org/pict3d/quick.html][3D Functional Pictures]]
- [[https://docs.racket-lang.org/turtles/index.html][Turtle Graphics]]
      - =pseudo= is a great resource for this!
      - The source code for the examples is at
            - [[https://github.com/racket/htdp/blob/master/htdp-lib/graphics/turtle-examples.rkt][turtle-examples.rkt]]
            - [[https://github.com/racket/htdp/blob/master/htdp-lib/graphics/value-turtles-examples.rkt][value-turtles-examples.rkt]]

Explore other [[https://docs.racket-lang.org/index.html][Racket Resources]]
- Many of which are graphics related
- There are also some APIs for sound

Explore Game Programming with  
- [[http://realmofracket.com/][Realm of Racket]]
- /I have a copy you can borrow/

Read more of the resources on my website, starting with
- [[https://github.com/GregDavidson/computing-magic][Computing Magic README]]
- And explore the links!
  
When you want to get serious with Racket
- Explore [[http://www.htdp.org/][How to Design Programs]]
- Try ideas from [[https://docs.racket-lang.org/guide/index.html][The Racket Guide]]

What support would you like?
- Please share your ideas!
- And would you like to do any group projects?

** Next Week: Development Tools

Next week we'll be concentrating on Software Tools, especially =git= and
=emacs=.  If you want to get started with them early, here's some guidance.
   
*** Git, Github
   
Git is eating the world, /resistance is futile!/

If you don't yet have a GitHub account
- [[https://github.com/join][Create a GitHub Account]]

Create some GitHub repositories
- A private repository, suggested name: =Notes=
- A public repository for Computing Magic
- More repositories for your other projects

Use [[file:../Software-Tools/git-readme.org][Git README]] to install and learn how to exploit Git for your projects

Clone your GitHub repositories onto your working computers 

*** Emacs: Lisp as a Platform 

See the [[file:../Software-Tools/Emacs/emacs-readme.org][Emacs README]] to install and begin to learn a nice Emacs and Emacs
environment.

- Getting Started with Emacs
      - Pick something you'd like to write up
      - Read up a bit on [[https://orgmode.org][OrgMode]]
      - Do the Emacs Tutorial (COntrol-H t)
      - Create your document using OrgMode in one of your repositories
- Commit your file
      - Try it with basic git commands
      - Try it with =magit= within Emacs
- Make changes and
      - lather, rinse, repeat!
